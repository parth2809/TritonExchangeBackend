service: triton-exchange

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - 'Fn::GetAtt': [ TEUsersTable, Arn ]

functions:
  main:
    handler: index.default
    events:
      - http: ANY /
        cors: true
      - http: 'ANY {proxy+}'
        cors: true
    environment:
      NODE_ENV: ${self:custom.nodeEnv.${opt:stage}}

resources:
  Resources:
    TEUsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TEUsersTable
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
  nodeEnv:
    dev: development
    prod: production
